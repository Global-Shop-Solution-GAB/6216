Program.Sub.ScreenSU.Start
Gui.FormSignOffSheet..Create
Gui.FormSignOffSheet..Caption("Sign Off sheet")
Gui.FormSignOffSheet..Size(20850,7620)
Gui.FormSignOffSheet..MinX(0)
Gui.FormSignOffSheet..MinY(0)
Gui.FormSignOffSheet..Position(0,0)
Gui.FormSignOffSheet..BackColor(-2147483633)
Gui.FormSignOffSheet..MousePointer(0)
Gui.FormSignOffSheet..MaxButton(False)
Gui.FormSignOffSheet..MinButton(False)
Gui.FormSignOffSheet..Event(UnLoad,FormSignOffSheet_UnLoad)
Gui.FormSignOffSheet.gridStatements.Create(GsGridControl)
Gui.FormSignOffSheet.gridStatements.Size(20580,6045)
Gui.FormSignOffSheet.gridStatements.Position(-30,750)
Gui.FormSignOffSheet.gridStatements.Zorder(1)
Gui.FormSignOffSheet.gridStatements.Event(RowCellClick,gridStatements_RowCellClick)
Gui.FormSignOffSheet.gridStatements.Anchor(15)
Gui.FormSignOffSheet.buttonSubmit.Create(Button)
Gui.FormSignOffSheet.buttonSubmit.Size(990,375)
Gui.FormSignOffSheet.buttonSubmit.Position(9165,6855)
Gui.FormSignOffSheet.buttonSubmit.Caption("Submit")
Gui.FormSignOffSheet.buttonSubmit.Event(Click,buttonSubmit_Click)
Gui.FormSignOffSheet.labelInfo.Create(Label,"Please answer all questions before you can clock in",True,15615,615,0,2355,120,True,2,"Arial",24,-2147483633,0)
Gui.FormSignOffSheet.labelInfo.Anchor(15)
Gui.FormSignOffSheet.buttonCancel.Create(Button)
Gui.FormSignOffSheet.buttonCancel.Size(990,375)
Gui.FormSignOffSheet.buttonCancel.Position(10245,6855)
Gui.FormSignOffSheet.buttonCancel.Caption("Cancel")
Gui.FormSignOffSheet.buttonCancel.Event(Click,buttonCancel_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.sEmployee.Declare(String)
V.Global.sEmployeeID.Declare(String)
V.Global.bFAIL.Declare(Boolean,False)
v.Global.sSkinTemp.Declare
v.Global.sBodyTemp.Declare
v.Global.dDate.Declare
v.Global.sThreshold.Declare
v.Global.bEmail.Declare
v.Global.bText.Declare
v.Global.bTeams.Declare
v.Global.bClockIn.Declare

Program.Sub.Preflight.End

Program.Sub.Main.Start
V.Local.sError.Declare(String)
v.Local.sFile.Declare
v.Local.sSQL.Declare
v.Local.sRet.Declare

F.Intrinsic.Control.Try

'Hook 15921, GUI Clock in hook
'009993	Employee Number
'009994	Employee Name

'Hook 48630, GUI Clock in hook - SFDC.Net
'Employee	Employee Number
'EmployeeName	Employee Name


	F.Intrinsic.Control.CallSub(SetIcon)
	
	F.ODBC.Connection!Con.OpenCompanyConnection
	
	F.Intrinsic.Control.If(V.Caller.Hook, =, 15921)
		V.Global.sEmployee.Set(V.Passed.009994)
		V.Global.sEmployeeID.Set(V.Passed.009993)
		F.Intrinsic.Control.CallSub(CheckIfAlreadyClockedIn)
		
	f.Intrinsic.Control.ElseIf(V.Caller.Hook, =, 48630)
		V.Global.sEmployee.Set(V.Passed.EmployeeName)
		V.Global.sEmployeeID.Set(V.Passed.Employee)
		F.Intrinsic.Control.CallSub(CheckIfAlreadyClockedIn)
	
	F.Intrinsic.Control.Else
		F.Global.Security.GetEmpNoFromUser(V.Caller.User, V.Global.sEmployeeID)
		F.Intrinsic.Control.If(V.Global.sEmployeeID.IsNoReturn)
			V.Global.sEmployeeID.Set("")
		F.Intrinsic.Control.EndIf
		F.Global.Security.GetFullName(V.Caller.User, V.Caller.CompanyCode, V.Global.sEmployee)
		
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Global.sEmployeeID.Trim, =, "")
		F.Intrinsic.Control.CallSub(FormSignOffSheet_UnLoad)
	F.Intrinsic.Control.EndIf
	
	
	'checkk if scanner is used
	v.Local.sSQL.Set("Select * from GCG_COVID_MAINT")
	f.ODBC.Connection!Con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Global.bEmail.Set(v.Local.sRet(1))
	f.Intrinsic.Control.If(v.Local.sRet(0),=,True)
		f.Intrinsic.Control.CallSub(checkTemperature)
	
		'if temperature check failed
		f.Intrinsic.Control.If(v.Global.bFAIL,=,true)
			F.Intrinsic.UI.Msgbox("You have failed the temperature check, please see your supervisor/ receptionist!", "Warning")
			f.Intrinsic.Control.If(v.Caller.Hook,=,15921, or, v.Caller.Hook,=,48630)
				v.Passed.777777.Set(1)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.CallSub(sendWarning)
			f.Intrinsic.Control.End
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.CallSub(LoadData)
	
	F.Intrinsic.Control.If(V.DataTable.tableStatements.RowCount, =, 0)
		F.Intrinsic.Control.CallSub(FormSignOffSheet_UnLoad)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(LoadGrid)
	GUI.FormSignOffSheet..Show
	GUI.FormSignOffSheet..SetFocus


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.SetIcon.Start
V.Local.sForm.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sIcon.Declare(String)
V.Local.iCounter.Declare(Long)

F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists.Not)
	F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
	F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists.Not)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.GetFormList(V.Local.sForm)
F.Intrinsic.String.Split(V.Local.sForm, "*!*", V.Local.sForm)

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sForm.UBound, 1)
	Gui.[V.Local.sForm(V.Local.iCounter)]..Icon(V.Local.sIcon)
F.Intrinsic.Control.Next(V.Local.iCounter)
Program.Sub.SetIcon.End

Program.Sub.CheckIfAlreadyClockedIn.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'The hook fires even if the employee is already clocked in, so we check for that here
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
'F.Intrinsic.String.Build("select Employee from EMP_IN_PROCESS_G where Employee = '{0}'", V.Global.sEmployeeID, V.Local.sSQL)
'changing this because this is a better way to tell if they're clocked in or not
F.Intrinsic.String.Build("select EMPLOYEE from V_TIME_ATTENDANCE where EMPLOYEE = '{0}' and CHARGE_DATE = '{1}' and DATE_OUT = '1900-01-01'", V.Global.sEmployeeID, V.Ambient.Date.FormatYYYY-MM-DD, V.Local.sSQL)
F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)

F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF, !=, True)
	F.Intrinsic.Control.CallSub(FormSignOffSheet_UnLoad)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.CheckIfAlreadyClockedIn.End

Program.Sub.LoadData.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'Load the statements from GCG_COVID_Statements
F.Data.DataTable.CreateFromSQL("tableStatements", "Con", "select ID, RTRIM(Statement_Name) as Statement_Name, RTRIM(Statement) as Statement from GCG_COVID_Statements where ACTIVE = 1 and ID <> 9999", True)
F.Data.DataTable.AddColumn("tableStatements", "Yes", "Boolean", 0)
F.Data.DataTable.AddColumn("tableStatements", "No", "Boolean", 0)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.LoadData.End

Program.Sub.LoadGrid.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'Set all the grid properties and set the main view
GUI.FormSignOffSheet.gridStatements.AddGridviewFromDatatable("gridViewStatements", "tableStatements")
GUI.FormSignOffSheet.gridStatements.SetGridViewProperty("gridViewStatements", "OptionsViewRowAutoHeight", True)
GUI.FormSignOffSheet.gridStatements.SetGridViewProperty("gridViewStatements", "AllowColumnMoving", False)
GUI.FormSignOffSheet.gridStatements.SetGridViewProperty("gridViewStatements", "OptionsSelectionEnableAppearanceFocusedRow", False)
GUI.FormSignOffSheet.gridStatements.SetGridViewProperty("gridViewStatements", "AllowSort", False)
GUI.FormSignOffSheet.gridStatements.SetGridViewProperty("gridViewStatements", "AllowFilter", False)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "Caption", "Yes")
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "HeaderFontBold", True)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "Width", 30)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "HeaderHAlignment", "Center")
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "AllowEdit", False)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "ReadOnly", True)
'Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "AllowSize", true)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "HeaderFontSize", 10)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Yes", "CellFontSize", 10)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "Caption", "No")
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "HeaderFontBold", True)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "Width", 30)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "HeaderHAlignment", "Center")
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "AllowEdit", False)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "ReadOnly", True)
'Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "AllowSize", true)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "HeaderFontSize", 10)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "No", "CellFontSize", 10)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "ID", "Visible", False)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement_Name", "Visible", False)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "HeaderFontBold", True)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "AllowEdit", False)
GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "ReadOnly", True)
'Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "AllowSize", true)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "HeaderFontSize", 10)
Gui.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "CellFontSize", 10)

GUI.FormSignOffSheet.gridStatements.SetColumnProperty("gridViewStatements", "Statement", "CellWordWrap", "Wrap")

GUI.FormSignOffSheet.gridStatements.MainView("gridViewStatements")

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.LoadGrid.End

Program.Sub.FormSignOffSheet_UnLoad.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.tableYes.Exists)
	F.Intrinsic.Control.If(V.Caller.Hook, =, 15921,and,V.DataTable.tableYes.RowCount, >, 0)
		V.Passed.777777.Set(1)
	F.Intrinsic.Control.ElseIf(V.Caller.Hook, =, 48630,and,V.DataTable.tableYes.RowCount, >, 0)
		V.Passed.777777.Set(1)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Else
	f.Intrinsic.Control.If(v.Caller.Hook,=,15921, or, v.Caller.Hook,=,48630)
		V.Passed.777777.Set(1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Clean up and exit

F.Intrinsic.Control.If(V.DataTable.tableYes.Exists)
	F.Data.DataTable.Close("tableYes")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.tableStatements.Exists)
	F.Data.DataTable.Close("tableStatements")
F.Intrinsic.Control.EndIf
F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.FormSignOffSheet_UnLoad.End

Program.Sub.buttonSubmit_Click.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

V.Local.sMessage.Declare(String)
V.Local.sSubject.Declare(String)
V.Local.sTo.Declare(String, "")
V.Local.sFrom.Declare(String)
V.Local.iID.Declare(Long)
V.Local.sTemp.Declare(String)

f.Intrinsic.Control.CallSub(getSupervisor_Info)
V.Local.sTo.Set(v.Args.Sup_Email)

'Check that everything is acknowledged
V.Local.iCounter.Declare(Long)
F.Data.DataTable.Create("tableYes", True)
F.Data.DataTable.AddColumn("tableYes","Index", Long)
F.Data.DataTable.AddColumn("tableYes","YES", "String")
F.Data.DataTable.AddColumn("tableYes","NO", "String")

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.tableStatements.RowCount--, 1)
	F.Intrinsic.Control.If(V.DataTable.tableStatements(V.Local.iCounter).YES!FieldValTrim, =, False, "AND", V.DataTable.tableStatements(V.Local.iCounter).NO!FieldValTrim, =, False)
		F.Intrinsic.UI.Msgbox("All items must be acknowledged before continuing")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.tableStatements(V.Local.iCounter).Yes!FieldValTrim)
		F.Data.DataTable.AddRow("tableYes", "Index", V.Local.iCounter,"YES",V.DataTable.tableStatements(V.Local.iCounter).YES!FieldValTrim,"NO",V.DataTable.tableStatements(V.Local.iCounter).NO!FieldValTrim)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Next(V.Local.iCounter)

'=================================FOR GSS =================================================================================================================================


'==========================================================================================================================================================================

'For anything they clicked yes on, let them know to speak to their supervisor
V.Local.sWarning.Declare(String)

F.Intrinsic.Control.If(V.DataTable.tableYes.RowCount, >, 0)
	F.Intrinsic.UI.Msgbox("You answered yes on one of the questions, please see your supervisor before continuing to work.", "Warning")
	F.Intrinsic.Control.CallSub(LoadSettings)
	
	'===============================================================================================================================

	f.Intrinsic.Control.If(v.Global.bEmail,=,True)
		f.Intrinsic.String.Build("Warning! Employee {0} - {1} had YES answer for COVID questionnaire",v.Global.sEmployee,v.Global.sEmployeeID,v.Local.sSubject)
		F.Intrinsic.Control.If(V.Args.Warning.Trim,=, "")
			F.Intrinsic.String.Build("Employee {0} - {1} has failed body temperature scan!", V.Global.sEmployeeID, V.Global.sEmployee, V.Local.sMessage)
		f.Intrinsic.Control.Else
			f.Intrinsic.String.Replace(v.Args.Warning,"<<<Employee Number>>>",V.Global.sEmployeeID,v.Local.sMessage)
			f.Intrinsic.String.Replace(v.Local.sMessage,"<<<Employee Name>>>",V.Global.sEmployee,v.Local.sMessage)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Args.To.Trim, !=, "", AND, V.Args.From.Trim, !=, "")
			F.Intrinsic.String.Split(V.Args.To.Trim, V.Ambient.NewLine, V.Local.sTemp)
			F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sTemp.UBound, 1)
				F.Intrinsic.Control.If(V.Local.sTo.Trim, =, "")
					F.Intrinsic.String.Build("{0}*!*{0}", V.Local.sTemp(V.Local.iCounter), V.Local.sTo)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}@!@{1}*!*{1}", V.Local.sTo, V.Local.sTemp(V.Local.iCounter), V.Local.sTo)
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Next(V.Local.iCounter)
			F.Intrinsic.String.Build("{0}*!*", V.Args.From.Trim, V.Local.sFrom)
			F.Global.Security.GetUserId(V.Caller.User, V.Caller.CompanyCode, V.Local.iID)
			F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.Local.iID, "GCG_COVID_ClockInSignOff", v.Local.sSubject, V.Local.sFrom, V.Local.sTo, V.Local.sMessage)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'===============================================================================================================================
	
	f.Intrinsic.Control.If(v.Caller.Hook,=,15921,or,v.Caller.Hook,=,48630)
		v.Passed.777777.Set(1)
	f.Intrinsic.Control.EndIf
	
'f.Intrinsic.Control.Else
'	v.Passed.777777.Set(0)

F.Intrinsic.Control.EndIf


'store the data
F.Intrinsic.Control.CallSub(StoreData)

'exit
GUI.FormSignOffSheet..Visible(False)
F.Intrinsic.Control.CallSub(FormSignOffSheet_UnLoad)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.buttonSubmit_Click.End

Program.Sub.LoadSettings.Start
V.Local.sPath.Declare(String)
V.Local.sContents.Declare(String)
V.Local.bExists.Declare(Boolean, False)
V.Local.sWarning.Declare(String)
V.Local.sFrom.Declare(String)
V.Local.sTo.Declare(String)
V.Local.sWilcard.Declare(String)

'this is for q're failure email
F.Intrinsic.String.Build("{0}\Custom\COVID\{1}\Settings\Covid_Statement_Settings_Email.txt", V.Caller.GlobalDir, V.Caller.CompanyCode, V.Local.sPath)
F.Intrinsic.File.Exists(V.Local.sPath, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.File.File2String(V.Local.sPath, V.Local.sContents)
	F.Intrinsic.String.Split(V.Local.sContents, "!@#$#@!", V.Local.sContents)
	V.Local.sWarning.Set(V.Local.sContents(0))
	V.Local.sFrom.Set(V.Local.sContents(1))
	V.Local.sTo.Set(V.Local.sContents(2))
	V.Local.sWilcard.Set(V.Local.sContents(3))
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("WARNING", V.Local.sWarning)
F.Intrinsic.Variable.AddRV("FROM", V.Local.sFrom)
F.Intrinsic.Variable.AddRV("TO", V.Local.sTo)
F.Intrinsic.Variable.AddRV("WILDCARD", V.Local.sWilcard)

'this is for thermal scan failure email
F.Intrinsic.String.Build("{0}\Custom\COVID\{1}\Settings\Covid_Statement_Settings_Email_SCANNER.txt", V.Caller.GlobalDir, V.Caller.CompanyCode, V.Local.sPath)
F.Intrinsic.File.Exists(V.Local.sPath, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.File.File2String(V.Local.sPath, V.Local.sContents)
	F.Intrinsic.String.Split(V.Local.sContents, "!@#$#@!", V.Local.sContents)
	V.Local.sWarning.Set(V.Local.sContents(0))
	V.Local.sFrom.Set(V.Local.sContents(1))
	V.Local.sTo.Set(V.Local.sContents(2))
	V.Local.sWilcard.Set(V.Local.sContents(3))
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("WARNING_SC", V.Local.sWarning)
F.Intrinsic.Variable.AddRV("FROM_SC", V.Local.sFrom)
F.Intrinsic.Variable.AddRV("TO_SC", V.Local.sTo)
F.Intrinsic.Variable.AddRV("WILDCARD_SC", V.Local.sWilcard)

Program.Sub.LoadSettings.End

Program.Sub.StoreData.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'Add the extra information that needs to be stored
F.Data.DataTable.AddColumn("tableStatements", "Employee_ID", "String", V.Global.sEmployeeID)
F.Data.DataTable.AddColumn("tableStatements", "Employee", "String", V.Global.sEmployee)
F.Data.DataTable.AddColumn("tableStatements", "Date", "Date", V.Ambient.Date.FormatYYYY-MM-DD)
F.Data.DataTable.AddColumn("tableStatements", "Time", "String", V.Ambient.Time)
F.Data.DataTable.AddColumn("tableStatements", "User", "String", V.Caller.User)

'Don't need this column, the flag is based off the Yes value
F.Data.DataTable.RemoveColumn("tableStatements", "No")
f.Data.DataView.Create("tableStatements","dvStatement",22,"YES = True","")
f.Data.DataView.ToDataTable("tableStatements","dvStatement","StatementsFinal")

'Store the data
F.Data.DataTable.SaveToDB()("StatementsFinal", "Con", "GCG_COVID_ClockIns", "Employee_ID*!*Employee*!*Statement*!*Yes*!*Date*!*Time*!*User", 128, "Employee_ID@!@Employee_ID*!*Employee@!@EMPLOYEE*!*Statement@!@Statement*!*Yes@!@Flag*!*Date@!@Date*!*Time@!@Time*!*User@!@User")

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.StoreData.End

Program.Sub.gridStatements_RowCellClick.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'This is for toggling yes and no based on eachother, as doing it with cell value changed and an expression table depends on focus
V.Local.bTemp.Declare(Boolean)
V.Local.iSelectedRow.Declare(Long)
GUI.FormSignOffSheet.gridStatements.GetSelectedRows("gridViewStatements", V.Local.iSelectedRow)

F.Intrinsic.Control.If(V.Args.Column, =, "Yes")
	V.Local.bTemp.Set(V.DataTable.tableStatements(V.Local.iSelectedRow).Yes!FieldValTrim)
	F.Data.DataTable.SetValue("tableStatements", V.Local.iSelectedRow, "Yes", V.Local.bTemp.Not)
	F.Data.DataTable.SetValue("tableStatements", V.Args.RowHandle, "No", V.Local.bTemp)
F.Intrinsic.Control.ElseIf(V.Args.Column, =, "No")
	V.Local.bTemp.Set(V.DataTable.tableStatements(V.Local.iSelectedRow).No!FieldValTrim)
	F.Data.DataTable.SetValue("tableStatements", V.Local.iSelectedRow, "No", V.Local.bTemp.Not)
	F.Data.DataTable.SetValue("tableStatements", V.Args.RowHandle, "Yes", V.Local.bTemp)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.gridStatements_RowCellClick.End

Program.Sub.buttonCancel_Click.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

'If they click cancel, exit and don't clock them in
'777777	Hook Override

'F.Intrinsic.Control.If(V.Caller.Hook, =, 15921)
'	V.Passed.777777.Set(1)
'F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(FormSignOffSheet_UnLoad)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.buttonCancel_Click.End

Program.Sub.checkTemperature.Start
V.Local.sError.Declare(String)
v.Local.bFAIL.Declare
v.Local.sMonth.Declare
v.Local.sDate.Declare
V.Local.sYear.Declare
V.Local.sDay.Declare
v.Local.sFile.Declare
v.Local.sString.Declare
v.Local.sFail.Declare
v.Local.bFileExists.Declare
F.Intrinsic.Control.Try


'check the temperature before logging in
F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.sYear)
F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.sMonth)
f.Intrinsic.String.LPad(v.Local.sMonth,"0",2,v.Local.sMonth)
F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.sDay)
f.Intrinsic.String.LPad(v.Local.sDay,"0",2,v.Local.sDay)

'getting the temp. log
f.Intrinsic.String.Build("C:\Data\SeekScan\{0}.{1}\{1}.{2}\{1}.{2}_FaceTemps.csv",v.Local.sYear,v.Local.sMonth,v.Local.sDay,v.Local.sFile)
f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bFileExists)

f.Intrinsic.Control.If(v.Local.bFileExists)
	f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sString)
	f.Intrinsic.String.Split(v.Local.sString,v.Ambient.NewLine,v.Local.sString)
	v.Local.iIndex.Declare
	v.Local.iIndex.Set(v.Local.sString.UBound)
	f.Intrinsic.Math.Sub(v.Local.iIndex,1,v.Local.iIndex)
	f.Intrinsic.String.Split(v.Local.sString(v.Local.iIndex),",",v.Local.sString)
	
	

	v.Global.dDate.Set(v.Local.sString(0))
	v.Global.sSkinTemp.Set(v.Local.sString(1))
	v.Global.sBodyTemp.Set(v.Local.sString(2))
	v.Global.sThreshold.Set(v.Local.sString(3))
	
	f.Intrinsic.Math.Mult(v.Global.sBodyTemp,9,v.Global.sBodyTemp)
	f.Intrinsic.Math.Div(v.Global.sBodyTemp,5,v.Global.sBodyTemp)
	f.Intrinsic.Math.Add(v.Global.sBodyTemp,32,v.Global.sBodyTemp)
	
	f.Intrinsic.Math.Mult(v.Global.sSkinTemp,9,v.Global.sSkinTemp)
	f.Intrinsic.Math.Div(v.Global.sSkinTemp,5,v.Global.sSkinTemp)
	f.Intrinsic.Math.Add(v.Global.sSkinTemp,32,v.Global.sSkinTemp)
	
	f.Intrinsic.Math.Mult(v.Global.sThreshold,9,v.Global.sThreshold)
	f.Intrinsic.Math.Div(v.Global.sThreshold,5,v.Global.sThreshold)
	f.Intrinsic.Math.Add(v.Global.sThreshold,32,v.Global.sThreshold)
	

	v.Local.sFail.Set(v.Local.sString(7))

	f.Intrinsic.Control.If(v.Local.sFail,=, "FAIL")
		v.Global.bFAIL.Set(True)
		f.Intrinsic.Control.CallSub(savetoDB)
	f.Intrinsic.Control.EndIf
	
	'delete file before next scan
	f.Intrinsic.File.DeleteFile(v.Local.sFile)
f.Intrinsic.Control.EndIf


F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.checkTemperature.End

Program.Sub.sendWarning.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

V.Local.sMessage.Declare(String)
V.Local.sSubject.Declare(String)
V.Local.sTo.Declare(String, "")
V.Local.sFrom.Declare(String)
V.Local.iID.Declare(Long)
V.Local.sTemp.Declare(String)
V.Local.iCounter.Declare


F.Intrinsic.Control.CallSub(LoadSettings)
f.Intrinsic.Control.CallSub(getSupervisor_Info)
V.Local.sTo.Set(v.Args.Sup_Email)

'email warning for failed temp scan		

f.Intrinsic.Control.If(v.Global.bEmail,=,True)
	f.Intrinsic.String.Build("Warning! Employee {0} - {1} failed temperature scan",v.Global.sEmployee,v.Global.sEmployeeID,v.Local.sSubject)
	F.Intrinsic.Control.If(V.Args.Warning_SC.Trim,=, "")
		F.Intrinsic.String.Build("Employee {0} - {1} has failed body temperature scan scan - {2}oF!", V.Global.sEmployeeID, V.Global.sEmployee, v.Global.sBodyTemp,V.Local.sMessage)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Replace(v.Args.Warning_SC,"<<<Employee Number>>>",V.Global.sEmployeeID,v.Local.sMessage)
		f.Intrinsic.String.Replace(v.Local.sMessage,"<<<Employee Name>>>",V.Global.sEmployee,v.Local.sMessage)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Args.To_SC.Trim, !=, "", AND, V.Args.From_SC.Trim, !=, "")
		F.Intrinsic.String.Split(V.Args.To_SC.Trim, V.Ambient.NewLine, V.Local.sTemp)
		F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sTemp.UBound, 1)
			F.Intrinsic.Control.If(V.Local.sTo.Trim, =, "")
				F.Intrinsic.String.Build("{0}*!*{0}", V.Local.sTemp(V.Local.iCounter), V.Local.sTo)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}@!@{1}*!*{1}", V.Local.sTo, V.Local.sTemp(V.Local.iCounter), V.Local.sTo)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Next(V.Local.iCounter)
		F.Intrinsic.String.Build("{0}*!*", V.Args.From_SC.Trim, V.Local.sFrom)
		F.Global.Security.GetUserId(V.Caller.User, V.Caller.CompanyCode, V.Local.iID)
		F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.Local.iID, "GCG_COVID_ClockInSignOff", v.Local.sSubject, V.Local.sFrom, V.Local.sTo, V.Local.sMessage)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.sendWarning.End

Program.Sub.savetoDB.Start
V.Local.sError.Declare(String)
F.Intrinsic.Control.Try

v.Local.sSQL.Declare
f.Intrinsic.String.Build("INSERT INTO GCG_COVID_FAILED_SCAN_LOG values('{0}','{1}','{2}','{3}','{4}')",v.Global.dDate.PervasiveDate,v.Global.sEmployeeID,v.Global.sSkinTemp,v.Global.sBodyTemp,v.Global.sThreshold,v.Local.sSQL)
F.ODBC.Connection!Con.Execute(v.Local.sSQL)

F.Intrinsic.Control.Catch
    F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
    F.Intrinsic.UI.Msgbox(V.Local.sError)
    F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.savetoDB.End

Program.Sub.getSupervisor_Info.Start
'Get supervisor info
V.Local.sSupervisorName.Declare
V.Local.sSupervisorEmail.Declare
v.Local.bFile.Declare
V.Local.sPath.Declare(String)
V.Local.sContents.Declare(String)
V.Local.bExists.Declare(Boolean, False)
V.Local.sEmails.Declare

F.Intrinsic.String.Build("{0}\Custom\COVID\{1}\Settings\Covid_Statement_Settings_Email.txt", V.Caller.GlobalDir, V.Caller.CompanyCode, V.Local.sPath)
F.Intrinsic.File.Exists(V.Local.sPath, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.File.File2String(V.Local.sPath, V.Local.sContents)
	F.Intrinsic.String.Split(V.Local.sContents, "!@#$#@!", V.Local.sContents)
	F.Intrinsic.String.Split(V.Local.sContents(2), "\n", V.Local.sEmails)
	V.Local.sSupervisorName.Set("Supervisor")
	V.Local.sSupervisorEmail.Set(V.Local.sEmails(0))
F.Intrinsic.Control.Else
	V.Local.sSupervisorName.Set("Supervisor")
	V.Local.sSupervisorEmail.Set("no@emailset.com")
F.Intrinsic.Control.EndIf



F.Global.General.SetPassedDataElement("EmpID",V.Global.sEmployeeID)

F.Intrinsic.Variable.AddRV("Sup_Name", V.Local.sSupervisorName)
F.Intrinsic.Variable.AddRV("Sup_Email", V.Local.sSupervisorEmail)

Program.Sub.getSupervisor_Info.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$wnichols$}$20210607151813762$}$h3jCD/nJ6bE/cd0Fx7GbYZBAEscRS8LBO2yOYISFOEm3oZhm5/6vevYDHnWksKsqDgMx4J+DrXZAiTj4NTc1CA==
Program.Sub.Comments.End